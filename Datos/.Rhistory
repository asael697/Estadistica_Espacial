print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
(prev, = inits()); h = 0.1; scale = scale_mat; Hastings = TRUE; MALA = FALSE
(prev = inits()); h = 0.1; scale = scale_mat; Hastings = TRUE; MALA = FALSE
ml1 = mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
ml1
(prev = inits()); h = 0.1; scale = scale_mat; Hastings = TRUE; MALA = TRUE
ml1 = mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
ml1
numDeriv::grad(func = target(y,x),x = prev)
numDeriv::grad(func = function(x) <- target(y,x),x = prev)
numDeriv::grad(func = function(x) <- target(y,x),x = prev)
numDeriv::grad(func = t_prop,theta
)
numDeriv::grad(func = t_prop,prev)
numDeriv::grad(func = t_prop,prev + optim(c(0,1)fn = -t_prop))
numDeriv::grad(func = t_prop,prev + optim(c(0,1)fn = -t_prop)$par)
opt = optim(c(0,1)fn = -t_prop)$par
opt = optim(c(0,1),fn = -t_prop)$par
opt = optim(c(0,1),fn = t_prop)$par
opt = optim(c(0,1),fn = functiion(x) - t_prop(y,x))$par
opt = optim(c(0,1),fn = function(x) - t_prop(y,x))$par
opt = optim(c(0,1),fn = t_prop)$par
opt = optim(c(0,1),fn = function(x) -t_prop(x) )$par
opt
numDeriv::grad(func = t_prop,prev + opt)
numDeriv::grad(func = t_prop, opt)
h*numDeriv::grad(func = t_prop, prev)
h*numDeriv::grad(func = t_prop, prev)
h*numDeriv::grad(func = t_prop, prev)
h*numDeriv::grad(func = t_prop, prev)
h*numDeriv::grad(func = t_prop, prev)
h*numDeriv::grad(func = t_prop, prev)
h*numDeriv::grad(func = t_prop, prev)
(prev = inits()); h = 0.01; scale = scale_mat; Hastings = TRUE; MALA = TRUE
mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
scale
(prev = inits()); h = 0.01; scale = chol(scale_mat); Hastings = TRUE; MALA = TRUE
mala_step(theta =prop, h = h, scale = scale, MALA = MALA)
mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
SCALE
scale
(prev = inits()); h = 0.01; scale = sqrt(h)*chol(scale_mat); Hastings = TRUE; MALA = TRUE
scale
(prev = inits()); h = 0.1; scale = sqrt(h)*chol(scale_mat); Hastings = TRUE; MALA = TRUE
scale
scale %*% numDeriv::grad(func = t_prop, prev)
h*scale %*% numDeriv::grad(func = t_prop, prev)/2
h*scale %*% numDeriv::grad(func = t_prop, prev)/2
h*scale %*% numDeriv::grad(func = t_prop, prev)/2
sqrt(h)*scale%*%numDeriv::grad(func = t_prop,theta)/2
(prev = inits()); h = 0.1; scale = sqrt(h)*chol(scale_mat); Hastings = TRUE; MALA = TRUE
mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
mala_step <-function(theta, h = 1, scale, MALA = FALSE){
r = 0
if(MALA){
S = t(scale)%*%scale
r = sqrt(h)*scale%*%numDeriv::grad(func = t_prop,theta)/2
r = as.numeric(r)
}
return(r)
}
ml2 = mala_step(theta =prop, h = h, scale = scale, MALA = MALA)
ml1 = mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
ml1
ml1 = mala_step(theta = prev, h = h, scale = scale, MALA = MALA)
ml1
sqrt(h)
(prev = inits()); h = 0.1; scale = chol(scale_mat); Hastings = TRUE; MALA = TRUE
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
h = 0.01
h^3
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.0001, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.0001, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 1e-6, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 1e-6, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,10),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
0.01^(1.5)
source("Funciones/functions.R")
scale_mat = matrix(c(0.5,0.01,0.01,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(0.5,0.01,0.01,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.001, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(0.5,0.01,0.01,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(0.5,0.01,0.01,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
library(cowplot)
library(posterior)
library(bayesplot)
library(ggplot2)
library(loo)
rm(list = ls())
library(cowplot)
library(posterior)
library(bayesplot)
library(ggplot2)
library(loo)
#priors
preal = c(rnorm(1),rgamma(1,5,2.5))
# datos
y = rnorm(n = 250,mean = preal[1], sd = preal[2])
ggplot(data.frame(y),aes(x = y))+geom_density(fill = "darkred")+
labs(x = "y",y = "conteo",title = "Histograma de los datos simulados y")
# Estimacion de la log-verosimilitud
loglik <- function(y,theta){
d = dnorm(y,mean = theta[1], sd = theta[2],log = TRUE)
return(sum(d))
}
# Calculo de la log prior logP(theta)
log_prior <- function(theta){
d1 = dnorm(theta[1],mean = 0,sd = 1,log = TRUE)
d2 = dgamma(theta[2],shape = 5,rate = 2.5,log = TRUE)
return(d1+d2)
}
# Generacion de los valores iniciales
inits <- function(){
c(rnorm(1),rgamma(1,5,2.5))
}
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 9)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 10)
print( Sys.time() - start)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 3,h = 0.01)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1,h = 0.01,MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
0.01^(1.5)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1, h = 0.01, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1, h = 0.001, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 5000, thin = 1, h = 0.001, MALA = TRUE)
print( Sys.time() - start)
chol(scale_mat)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = TRUE)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = diag(c(5,2))
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = diag(c(5,2))
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 3000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.5,0.5,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.5,0.5,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.1, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.5,0.5,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.05, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,3),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,3),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.005, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
source("Funciones/functions.R")
scale_mat = matrix(c(5,1,1,3),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.5,0.5,3),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1.5),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,1),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.001, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.001, MALA = FALSE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = FALSE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
source("Funciones/functions.R")
scale_mat = matrix(c(5,0.1,0.1,2),ncol = 2)
#scale_mat = 0.5*diag(2)
start = Sys.time()
post1 = sampling(y = y, scale = scale_mat, iter = 2000, thin = 1, h = 0.01, MALA = TRUE)
print( Sys.time() - start)
colnames(post1) = c("mu","sigma","acceptence_rate",".chain")
post1_df = as_draws_df(post1)
summarise_draws(post1_df)
mcmc_combo(post1_df,pars = c("mu","sigma"))
rm(list = ls())
setwd("/Users/asael_am/Documents/GEV-DLMs/Datos")
rm(list = ls())
source("~/funciones/functions.R")
source("/Users/asael_am/Documents/GEV-DlMs/funciones/functions.R")
library(readxl)
Estaciones <- read_excel("Estaciones.xlsx")
View(Estaciones)
library(readxl)
Estaciones <- read_excel("Estaciones.xlsx")
y <- na.omit(Estaciones$S1)
n<-length(y)
mu_post = ffbs(y,C0 = 20,iter = 1000)
plot_ts(y)
library(ggplot2)
plot_ts(y)
mu_post = ffbs(y,C0 = 20,iter = 500)
color_scheme_set("teal")
library(bayesplot)
ppc_ribbon(y = y, yrep = mu_post$ft[, ,1])
class(y)
ppc_ribbon(y = as.numeric(y), yrep = mu_post$ft[, ,1])
bayesplot::theme_default()
?theme_default()
bayesplot::theme_default("gray")
bayesplot_theme_set()
bayesplot_theme_set()
class(theme_default())
dlm::dlm
